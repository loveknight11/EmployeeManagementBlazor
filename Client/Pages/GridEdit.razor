@page "/gridEdit"
<h3>GridEdit</h3>

<SfGrid DataSource="Employees"  AllowPaging="true" Toolbar="@(new List<string>() { "Add", "Edit", "Delete", "Cancel" })">
    <GridEditSettings AllowAdding="true" AllowEditing="true" AllowDeleting="true"></GridEditSettings>
    <GridColumns>
        <GridColumn IsPrimaryKey="true" Field=@nameof(Employee.EmployeeId) HeaderText="Employee ID"></GridColumn>
        <GridColumn Field=@nameof(Employee.FirstName) HeaderText="First Name"></GridColumn>
        <GridColumn Field=@nameof(Employee.LastName) HeaderText=" Last Name"></GridColumn>
        <GridColumn Field=@nameof(Employee.Email) HeaderText="Email"></GridColumn>
        <GridColumn Field="@nameof(Employee.Gender)" HeaderText="Gender">
            <EditTemplate>
                <SfDropDownList DataSource="@Enum.GetNames(typeof(Gender))" TValue="Gender" TItem="string"></SfDropDownList>
            </EditTemplate>
        </GridColumn>
        <GridColumn Field="Department.DepartmentName" HeaderText="Department">
            <EditTemplate>
                <SfDropDownList DataSource="@Departments" TItem="Department" TValue="int" @bind-Value ="@((context as Employee).DepartmentId)">
                    <DropDownListFieldSettings Text="@nameof(Department.DepartmentName)" 
                                               Value="@nameof(Department.DepartmentId)" ></DropDownListFieldSettings>
                </SfDropDownList>
            </EditTemplate>
        </GridColumn>
        <GridColumn Field="@nameof(Employee.DateOfBrith)" HeaderText="BirthDate" Format="d"></GridColumn>

    </GridColumns>
</SfGrid>




@code {
    [Inject]
    public IEmployeeService employeeService { get; set; }

    [Inject]
    public IDepartmentService departmentService { get; set; }

    

    IEnumerable<Employee> Employees = new List<Employee>();
    IEnumerable<Department> Departments = new List<Department>();
    protected override async Task OnInitializedAsync()
    {
        Employees = await employeeService.GetAllEmployees();
        Departments = await departmentService.GetDepartments();
    }
}
